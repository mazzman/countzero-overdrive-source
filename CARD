/**
 * A class to define a single playing card in a deck of 52 cards.
 * @author Philip
 *Copyright 2013 all rights reserved.
 */
public class Card {
	
	private String name;
	private int numVal;
	private int suitVal;
	
	/**
	 * A default constructor that initializes "name" as an empty String, and "numVal"/"suitVal" as an int 0.
	 */
	public Card (){
		name = new String();
		numVal = 0;
		suitVal = 0;
	}
	
	/**
	 * A constructor that takes a String value representing the card's full name and assigns it to "name"
	 * and then extracts the cards number value and suit value and assigns them respectively to the
	 * "numVal" and "suitVal".
	 * @param cardName The String value representing this Card's name.
	 */
	public Card (String cardName){
		name = cardName;
		numVal = extractNumVal();
		suitVal = extractSuitVal();
	}

	/**
	 * Based on the Card's name, returns an int value representing this Card's number.
	 * @return An int value representing this Card's number value.
	 */
	private int extractNumVal(){
		if (name.contains("three")){
			return 3;
		} else if (name.contains("four")){
			return 4;
		} else if (name.contains("five")){
			return 5;
		} else if (name.contains("six")){
			return 6;
		} else if (name.contains("seven")){
			return 7;
		} else if (name.contains("eight")){
			return 8;
		} else if (name.contains("nine")){
			return 9;
		} else if (name.contains("ten")){
			return 10;
		} else if (name.contains("jack")){
			return 11;
		} else if (name.contains("queen")){
			return 12;
		} else if (name.contains("king")){
			return 13;
		} else if (name.contains("ace")){
			return 14;
		} else if (name.contains("two")){
			return 15;
		} else{
			return 0;
		}
	}
	
	/**
	 * Based on the Card's name, returns an int value representing this Card's suit value.
	 * @return an int value representing this Card's suit value.
	 */
	private int extractSuitVal(){
		if (name.contains("clubs")){
			return 1;
		} else if (name.contains("diamonds")){
			return 2;
		} else if (name.contains("hearts")){
			return 3;
		} else if (name.contains("spades")){
			return 4;
		} else{
			return 0;
		}
	}
	
	/**
	 * Returns this Card's name.
	 * @return The String value representing this Card's name.
	 */
	public String getName(){
		return name;
	}
	
	/**
	 * Returns this Card's number value.
	 * @return The int value representing this Card's number.
	 */
	public int getNum(){
		return numVal;
	}
	
	/**
	 * Returns this Card's suit value.
	 * @return The int value representing this Card's suit.
	 */
	public int getSuit(){
		return suitVal;
	}
}
